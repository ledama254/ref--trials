DATABASE_URL=psql 'postgresql://neondb_owner:npg_7OdG8HTyckCx@ep-restless-bush-abzgrrcr-pooler.eu-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require'
JWT_SECRET=replace_me_with_long_random
JWT_EXPIRES_IN=7d

# CORS: Set to your GitHub Pages origin (or your web app origin)
FRONTEND_URL=https://username.github.io
# Optional: comma-separated additional allowed origins
FRONTEND_URLS=

BACKEND_PORT=4000
# On Render/Railway the platform sets PORT automatically
# PORT=

# M-Pesa Daraja (use sandbox until you go live)
MPESA_ENV=sandbox
MPESA_CONSUMER_KEY=
MPESA_CONSUMER_SECRET=
MPESA_SHORTCODE=
MPESA_PASSKEY=
MPESA_INITIATOR_NAME=
MPESA_SECURITY_CREDENTIAL=
# Optional: override for B2C short code (defaults to MPESA_SHORTCODE)
MPESA_B2C_SHORTCODE=
# Public callback URL (must be reachable by Safaricom)
MPESA_CALLBACK_URL=https://api.username.example/api/payments/mpesa/callback

# --- Neon Postgres Guide ---
# Use a pooled connection for runtime (fewer connections, PgBouncer transaction pooling):
# DATABASE_URL=postgresql://USER:PASSWORD@ep-xxxxxxx-pooler.YOUR-REGION.aws.neon.tech/DB?sslmode=require&pgbouncer=true&connection_limit=1
# Use a direct (unpooled) connection for schema migrations and seeding:
# DIRECT_DATABASE_URL=postgresql://USER:PASSWORD@ep-xxxxxxx.YOUR-REGION.aws.neon.tech/DB?sslmode=require
# Run migrations and seed against the direct URL, e.g.:
#   DATABASE_URL="$DIRECT_DATABASE_URL" npx prisma migrate deploy
#   DATABASE_URL="$DIRECT_DATABASE_URL" node prisma/seed.js
